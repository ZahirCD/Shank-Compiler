In Java:

// Recursive
public int sum (int x, int y) {
	if (y=0)
		return x;
	return sum(x+1,y-1);
}

// Iterative
public int sum(int x, int y) {
	while (y>0) {
		x++;
		y--;
	}
	return x;
}

public start() { // call one of the add functions...
	int a=5, b=6;
	int c = add(a,b);
}


In SHANK:
{ Recursive }
define add (x,y : integer; var sum : integer)
variables yMinusOne, xPlusOne, newSum : integer
	{ in here, x and y are constant }
	if y = 0 then
		sum := x
	else
		xPlusOne := x + 1
		yMinusOne := y - 1
		add xPlusOne, yMinusOne, var newSum
		sum := newSum

{ Iterative }
define add (x,y:integer, var sum: integer)
variables counter : integer
	counter := y
	sum := x
	while counter > 0
		counter := counter - 1
		sum := sum + 1


{ To call one of the adds: }
define start ()
variables a,b,c : integer
	a := 5
	b := 6
	add a,b,var c
	{ in here, a & b are the original values, but c is whatever add sets sum to }
